
paths:
  Users:
    parameters:
      - $ref: 'global.yml#/components/parameters/Version'
      - $ref: 'global.yml#/components/parameters/OrganizationId'
    post:
      summary: Creates a user
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          $ref: 'global.yml#/components/responses/BadRequest'
        '403':
          $ref: 'global.yml#/components/responses/Forbidden'
  UserId:
    parameters:
      - $ref: 'global.yml#/components/parameters/Version'
      - $ref: 'global.yml#/components/parameters/OrganizationId'
      - $ref: '#/components/parameters/UserId'
    get:
      summary: Gets a user
      security:
        - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          $ref: 'global.yml#/components/responses/BadRequest'
        '403':
          $ref: 'global.yml#/components/responses/Forbidden'
        '404':
          $ref: 'global.yml#/components/responses/NotFound'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
  parameters:
    UserId:
      in: path
      name: id
      required: true
      schema:
        type: string
        format: uuid
      description: User's ID